---
# tasks to define dr hosts variables lists
- block:
  - name: define dr hosts info
    set_fact:
      ipaddress1: "{{ ipvar1 if ipvar1 != '' else octetvar1 }}"
      ipaddress2: "{{ ipvar2 if ipvar2 != '' else octetvar2 }}"
      vmname: "{{ namevar }}"
      vmcpu: "{{ cpuvar }}"
      vmmem: "{{ memvar }}"
      appliance: "[{{ namevar }}/{{ ipvar1 if ipvar1 != '' else octetvar1 }}/{{ typevar }} {{ ipvar1 if ipvar1 != '' else octetvar1 }}\"/CUG]"
    vars:
      index: "{{ member_item[-2:] }}"
      ipvar1: "{{ hostvars[member_item]['netconfig']['nic1']['ippool'][index|int - 1] if hostvars[member_item]['netconfig']['nic1']['ippool']|length >= index|int else '' }}"
      ipvar2: "{{ hostvars[member_item]['netconfig']['nic2']['ippool'][index|int - 1] if hostvars[member_item]['netconfig']['nic2']['ippool']|length >= index|int else '' }}"
      octetvar1: "{{ customer.secondary.octets + '.' + hostvars[member_item]['netconfig']['nic1']['octetpool'][index|int - 1]|string if hostvars[member_item]['netconfig']['nic1']['octetpool']|length >= index|int else '' }}"
      octetvar2: "{{ customer.secondary.octets + '.' + hostvars[member_item]['netconfig']['nic2']['octetpool'][index|int - 1]|string if hostvars[member_item]['netconfig']['nic2']['octetpool']|length >= index|int else '' }}"
      namevar: "{{ hostvars[member_item]['vm']['name'] }}"
      cpuvar: "{{ hostvars[member_item]['vm']['cpu'] }}"
      memvar: "{{ hostvars[member_item]['vm']['memory'] }}"
      typevar: "{{ 'db/\"Database:' if 'drem7db' in hostvars[member_item]['group_names'] else 'ap/\"Admin Portal:' if 'drem7prt' in hostvars[member_item]['group_names'] else 'mc/\"Message Collector:' if 'drem7mc' in hostvars[member_item]['group_names'] else 'dc/\"Data Collector:' }}"
    loop: "{{ groups[vm_group] }}"
    loop_control:
      loop_var: member_item
    register: info

  - name: define dr appliances list
    set_fact:
      drappliances_list: "{{ drappliances_list | default([]) + myvar if (drappliances_list is defined and drappliances_list != '') else myvar }}"
    vars:
      myvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.appliance') | list }}"
    loop: "{{ (groups['drem7db'] if groups['drem7db'] is defined else []) + (groups['drem7prt'] if groups['drem7prt'] is defined else []) + (groups['drem7mc'] if groups['drem7mc'] is defined else []) + (groups['drem7dc'] if groups['drem7dc'] is defined else []) }}"
    loop_control:
      loop_var: info_item
    when: info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)

  - name: define drlnxjmp lists
    set_fact:
      drlnxjmp_ip1_list: "{{ drlnxjmp_ip1_list | default([]) + ipvar1 if (drlnxjmp_ip1_list is defined and drlnxjmp_ip1_list != '') else ipvar1 }}"
      drlnxjmp_ip2_list: "{{ drlnxjmp_ip2_list | default([]) + ipvar2 if (drlnxjmp_ip2_list is defined and drlnxjmp_ip2_list != '') else ipvar2 }}"
      drlnxjmp_hst_list: "{{ drlnxjmp_hst_list | default([]) + hstvar if (drlnxjmp_hst_list is defined and drlnxjmp_hst_list != '') else hstvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress1') | list }}"
      ipvar2: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress2') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmname') | list }}"
    loop: "{{ groups['drlnxjmp'] }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drlnxjmp'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)

  - name: define drrly lists
    set_fact:
      drrly_ip1_list: "{{ drrly_ip1_list | default([]) + ipvar1 if (drrly_ip1_list is defined and drrly_ip1_list != '') else ipvar1 }}"
      drrly_ip2_list: "{{ drrly_ip2_list | default([]) + ipvar2 if (drrly_ip2_list is defined and drrly_ip2_list != '') else ipvar2 }}"
      drrly_hst_list: "{{ drrly_hst_list | default([]) + hstvar if (drrly_hst_list is defined and drrly_hst_list != '') else hstvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress1') | list }}"
      ipvar2: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress2') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmname') | list }}"
    loop: "{{ groups['drrly'] }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drrly'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)

  - name: define drspldpl lists
    set_fact:
      drspldpl_ip1_list: "{{ drspldpl_ip1_list | default([]) + ipvar1 if (drspldpl_ip1_list is defined and drspldpl_ip1_list != '') else ipvar1 }}"
      drspldpl_hst_list: "{{ drspldpl_hst_list | default([]) + hstvar if (drspldpl_hst_list is defined and drspldpl_hst_list != '') else hstvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress1') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmname') | list }}"
    loop: "{{ groups['drspldpl'] }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drspldpl'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)

  - name: define drsplind lists
    set_fact:
      drsplind_ip1_list: "{{ drsplind_ip1_list | default([]) + ipvar1 if (drsplind_ip1_list is defined and drsplind_ip1_list != '') else ipvar1 }}"
      drsplind_hst_list: "{{ drsplind_hst_list | default([]) + hstvar if (drsplind_hst_list is defined and drsplind_hst_list != '') else hstvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress1') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmname') | list }}"
    loop: "{{ groups['drsplind'] }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drsplind'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)

  - name: define drsplmas lists
    set_fact:
      drsplmas_ip1_list: "{{ drsplmas_ip1_list | default([]) + ipvar1 if (drsplmas_ip1_list is defined and drsplmas_ip1_list != '') else ipvar1 }}"
      drsplmas_hst_list: "{{ drsplmas_hst_list | default([]) + hstvar if (drsplmas_hst_list is defined and drsplmas_hst_list != '') else hstvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress1') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmname') | list }}"
    loop: "{{ groups['drsplmas'] }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drsplmas'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)

  - name: define drsplsrc lists
    set_fact:
      drsplsrc_ip1_list: "{{ drsplsrc_ip1_list | default([]) + ipvar1 if (drsplsrc_ip1_list is defined and drsplsrc_ip1_list != '') else ipvar1 }}"
      drsplsrc_hst_list: "{{ drsplsrc_hst_list | default([]) + hstvar if (drsplsrc_hst_list is defined and drsplsrc_hst_list != '') else hstvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress1') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmname') | list }}"
    loop: "{{ groups['drsplsrc'] }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drsplsrc'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)

  - name: define drem7prt lists
    set_fact:
      drem7prt_ip1_list: "{{ drem7prt_ip1_list | default([]) + ipvar1 if (drem7prt_ip1_list is defined and drem7prt_ip1_list != '') else ipvar1 }}"
      drem7prt_ip2_list: "{{ drem7prt_ip2_list | default([]) + ipvar2 if (drem7prt_ip2_list is defined and drem7prt_ip2_list != '') else ipvar2 }}"
      drem7prt_hst_list: "{{ drem7prt_hst_list | default([]) + hstvar if (drem7prt_hst_list is defined and drem7prt_hst_list != '') else hstvar }}"
      drem7prt_cpu_list: "{{ drem7prt_cpu_list | default([]) + cpuvar if (drem7prt_cpu_list is defined and drem7prt_cpu_list != '') else cpuvar }}"
      drem7prt_mem_list: "{{ drem7prt_mem_list | default([]) + cpuvar if (drem7prt_mem_list is defined and drem7prt_mem_list != '') else memvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress1') | list }}"
      ipvar2: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress2') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmname') | list }}"
      cpuvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmcpu') | list }}"
      memvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmmem') | list }}"
    loop: "{{ groups['drem7prt'] }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drem7prt'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)

  - name: define drem7db lists
    set_fact:
      drem7db_ip1_list: "{{ drem7db_ip1_list | default([]) + ipvar1 if (drem7db_ip1_list is defined and drem7db_ip1_list != '') else ipvar1 }}"
      drem7db_ip2_list: "{{ drem7db_ip2_list | default([]) + ipvar2 if (drem7db_ip2_list is defined and drem7db_ip2_list != '') else ipvar2 }}"
      drem7db_hst_list: "{{ drem7db_hst_list | default([]) + hstvar if (drem7db_hst_list is defined and drem7db_hst_list != '') else hstvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress1') | list }}"
      ipvar2: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress2') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmname') | list }}"
    loop: "{{ groups['drem7db'] }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drem7db'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)

  - name: define drem7dc lists
    set_fact:
      drem7dc_ip1_list: "{{ drem7dc_ip1_list | default([]) + ipvar1 if (drem7dc_ip1_list is defined and drem7dc_ip1_list != '') else ipvar1 }}"
      drem7dc_ip2_list: "{{ drem7dc_ip2_list | default([]) + ipvar2 if (drem7dc_ip2_list is defined and drem7dc_ip2_list != '') else ipvar2 }}"
      drem7dc_hst_list: "{{ drem7dc_hst_list | default([]) + hstvar if (drem7dc_hst_list is defined and drem7dc_hst_list != '') else hstvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item.0) | map(attribute='ansible_facts.ipaddress1') | list }}"
      ipvar2: "{{ info.results | selectattr('member_item', 'equalto', info_item.0) | map(attribute='ansible_facts.ipaddress2') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item.0) | map(attribute='ansible_facts.vmname') | list }}"
    loop: "{{ groups['drem7dc'] | zip(range(0, (groups['drem7dc']|length)|int)) | list }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drem7dc'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item.0) | map(attribute='member_item') | list | string is search(info_item.0)

  - name: define drem7mc lists
    set_fact:
      drem7mc_ip1_list: "{{ drem7mc_ip1_list | default([]) + ipvar1 if (drem7mc_ip1_list is defined and drem7mc_ip1_list != '') else ipvar1 }}"
      drem7mc_ip2_list: "{{ drem7mc_ip2_list | default([]) + ipvar2 if (drem7mc_ip2_list is defined and drem7mc_ip2_list != '') else ipvar2 }}"
      drem7mc_hst_list: "{{ drem7mc_hst_list | default([]) + hstvar if (drem7mc_hst_list is defined and drem7mc_hst_list != '') else hstvar }}"
    vars:
      ipvar1: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress1') | list }}"
      ipvar2: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.ipaddress2') | list }}"
      hstvar: "{{ info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='ansible_facts.vmname') | list }}"
    loop: "{{ groups['drem7mc'] }}"
    loop_control:
      loop_var: info_item
    when:
      - groups['drem7mc'] is defined
      - info.results | selectattr('member_item', 'equalto', info_item) | map(attribute='member_item') | list | string is search(info_item)
  run_once: true
  tags: ['always', 'vm_facts']

