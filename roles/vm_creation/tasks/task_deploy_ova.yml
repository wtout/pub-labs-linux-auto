---
# tasks to deploy VM from OVF/OVA
- block:
  - name: Get names of networks from ova
    shell: "$(which tar) xfO {{ ova_dir }}/{{ ova_name }} *.ovf | grep -i connection | awk -F 'on>' '{print $2}' | cut -d '<' -f1"
    check_mode: no
    register: ova_nets
  - name: Deploy VM from OVF/OVA
    vmware_deploy_ovf:
      allow_duplicates: no
      hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
      username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
      password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
      datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
      disk_provisioning: "{{ vm.disk_provisioning if vm.disk_provisioning != '' else 'thin' if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] is search('PAE-HX-DC|Staging') else 'thick' }}"
      cluster: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['cluster'] }}"
      datastore: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datastore_cluster'] if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datastore_cluster'] != '' else vm_ds }}"
      folder: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] + '/vm' + ('/' + fldr_name if fldr_name != '' else '') }}"
      name: "{{ vm.name }}"
      networks: {}
      ova: "{{ ova_dir }}/{{ ova_name }}"
      power_on: no
      validate_certs: no
    register: deploy_ovf
    until: deploy_ovf is succeeded
    retries: 5
    delay: 10
    environment:
      http_proxy: ''
      https_proxy: ''
    throttle: "{{ 5 if hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['deptype'] == 'h' else 0 }}"
  delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
  tags: vm_creation
