---
# tasks to check connectivity and credentials for non EM7 hosts
- name: check connection credentials
  block:
    - name: check VM reachable
      ansible.builtin.command: ping {{ ansible_host }} -c 1
      register: vcr_vm_reachable
      check_mode: no
      delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
    - name: check original credentials
      block:
        - name: check VM credentials
          ansible.builtin.wait_for_connection:
            timeout: 10
          register: vcr_vm_creds
          check_mode: no
      rescue:
        - name: determine good credentials
          block:
            - name: update credentials
              ansible.builtin.set_fact:
                ansible_ssh_pass: "{{ postppp }}"
                ansible_become_pass: "{{ postppp }}"
              no_log: true
            - name: check post puppet push credentials
              ansible.builtin.wait_for_connection:
                timeout: 10
          rescue:
            - name: switch to {{ vm_svc_user }} user
              ansible.builtin.set_fact:
                ansible_user: "{{ vm_svc_user }}"
                ansible_ssh_pass: "{{ vm_svc_pass }}"
                ansible_become_pass: "{{ vm_svc_pass }}"
              no_log: true
            - name: check {{ vm_svc_user }} credentials
              ansible.builtin.wait_for_connection:
                timeout: 10
          when:
            - vcr_vm_creds.msg is search('Invalid/incorrect')
  rescue:
    - name: check service user credentials
      block:
        - name: switch to {{ vm_svc_user }} user
          ansible.builtin.set_fact:
            ansible_user: "{{ vm_svc_user }}"
            ansible_ssh_pass: "{{ vm_svc_pass }}"
          no_log: true
        - name: check connection
          ansible.builtin.wait_for:
            port: 22
            host: "{{ netconfig.nic1.ipaddress }}"
            search_regex: OpenSSH
            timeout: 10
          register: vcr_vm_connection
          check_mode: no
          delegate_to: "{{ groups['bastion'][0] if (groups['bastion'] | length >= 1 and bastion.address != [] and bastion.address != ['']) else 'localhost' }}"
        - debug:
            msg: "VM hardening is enabled. Nothing to do"
        - name: set flag to not create and configure the VMs
          ansible.builtin.set_fact:
            crecon: false
      rescue:
        - name: revert user
          ansible.builtin.set_fact:
            ansible_user: "{{ credentials.username }}"
            ansible_ssh_pass: "{{ credentials.password }}"
          no_log: true
  tags: vm_creation
