---
# tasks to deploy EM7 VM from ISO
- block:
  - name: Get VM info
    vmware_guest_info:
      hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
      username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
      password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
      datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
      name: "{{ vm.name }}"
      validate_certs: no
    check_mode: no
    ignore_errors: true
    register: vmguest_info

  - block:
    - name: enable VM building
      set_fact:
        build_vm: true
    - include_tasks: task_packer_build_vm.yml
      loop: "{{ range(1, 3 + 1)|list }}"
      loop_control:
        loop_var: loop_item
    when:
      - vmguest_info is failed

  - block:
    - include_tasks: task_poweron_vm.yml
    - name: check VM reachable
      command: ping {{ netconfig.nic1.ipaddress }} -c 1
      register: vm_reachable1
      check_mode: no
      until: vm_reachable1 is succeeded
      retries: 5
      delay: 10
    rescue:
    - block:
      - include_tasks: task_reboot_guest_vm.yml
      - name: recheck VM reachable
        command: ping {{ netconfig.nic1.ipaddress }} -c 1
        register: vm_reachable2
        check_mode: no
        until: vm_reachable2 is succeeded
        retries: 5
        delay: 10
      rescue:
      - block:
        - name: enable VM building
          set_fact:
            build_vm: true
        - include_tasks: task_packer_build_vm.yml
          loop: "{{ range(1, 3 + 1)|list }}"
          loop_control:
            loop_var: loop_item
        - include_tasks: task_poweron_vm.yml
        - name: check VM reachable
          command: ping {{ netconfig.nic1.ipaddress }} -c 1
          register: vm_reachable3
          check_mode: no
          until: vm_reachable3 is succeeded
          retries: 5
          delay: 10
        rescue:
          - include_tasks: task_reboot_guest_vm.yml
          - name: recheck VM reachable
            command: ping {{ netconfig.nic1.ipaddress }} -c 1
            register: vm_reachable4
            check_mode: no
            until: vm_reachable4 is succeeded
            retries: 5
            delay: 10
    - name: Wait for port 22 to become open and contain "OpenSSH"
      wait_for:
        port: 22
        host: "{{ netconfig.nic1.ipaddress }}"
        search_regex: OpenSSH
        delay: 10
        timeout: 90
        sleep: 10
      register: ssh_ready1
    when:
    - vmguest_info is succeeded or deploy_ubuntuiso is succeeded

  - ansible.builtin.assert:
      that:
        - "deploy_ubuntuiso|default({'failed': false}) is succeeded"
  delegate_to: localhost
  tags: vm_creation
