---
# tasks to add IPV6 address configuration on the EM7 VMs
- block:
  - block:
    - name: Enable NIC1 IPV6INIT
      ansible.builtin.replace:
        path: /etc/sysconfig/network-scripts/ifcfg-ens160
        regexp: '^(IPV6INIT=).*$'
        replace: '\g<1>yes'
    - name: Add NIC1 new IPV6 settings
      ansible.builtin.lineinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-ens160
        line: "{{ line_item }}"
      loop:
        - 'IPV6INIT=yes'
        - 'IPV6_AUTOCONF=no'
        - 'IPV6_DEFROUTE=yes'
        - 'IPV6_FAILURE_FATAL=no'
        - 'IPV6ADDR={{ netconfig.nic1.ipv6_pool[inventory_hostname[-2:]|int - 1] }}'
        - 'IPV6_DEFAULTGW={{ netconfig.nic1.ipv6_gtw }}'
        - 'IPV6_PRIVACY=no'
      loop_control:
        loop_var: line_item
      register: reg_nic1_update
    when:
      - netconfig.nic1.ipv6_pool|length >= inventory_hostname[-2:]|int
      - netconfig.nic1.ipv6_pool[inventory_hostname[-2:]|int - 1] != ''
  - block:
    - name: Enable NIC2 IPV6INIT
      ansible.builtin.replace:
        path: /etc/sysconfig/network-scripts/ifcfg-ens192
        regexp: '^(IPV6INIT=).*$'
        replace: '\g<1>yes'
    - name: Add NIC2 new IPV6 settings
      ansible.builtin.lineinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-ens192
        line: "{{ line_item }}"
      loop:
        - 'IPV6INIT=yes'
        - 'IPV6_AUTOCONF=no'
        - 'IPV6_DEFROUTE=yes'
        - 'IPV6_FAILURE_FATAL=no'
        - 'IPV6ADDR={{ netconfig.nic2.ipv6_pool[inventory_hostname[-2:]|int - 1] }}'
        - 'IPV6_DEFAULTGW={{ netconfig.nic2.ipv6_gtw }}'
        - 'IPV6_PRIVACY=no'
      loop_control:
        loop_var: line_item
      register: reg_nic2_update
    when:
      - netconfig.nic2.ipv6_pool|length >= inventory_hostname[-2:]|int
      - netconfig.nic2.ipv6_pool[inventory_hostname[-2:]|int - 1] != ''
  - name: restart the network on the EM7 VM
    vmware_vm_shell:
      hostname: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['address'] }}"
      username: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['username'] }}"
      password: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['credentials']['password'] }}"
      datacenter: "{{ hostvars[groups[('dr' if 'dr' in group_names else '') + 'vcenter'][0]]['information']['datacenter'] }}"
      validate_certs: false
      vm_id: "{{ vm.name }}"
      vm_username: "{{ ansible_user }}"
      vm_password: "{{ ansible_ssh_pass }}"
      vm_shell: '/usr/bin/sudo'
      vm_shell_args: '-S sh -c "/bin/systemctl restart network" <<< {{ ansible_ssh_pass }}'
      wait_for_process: true
    register: em7_restart_net
    until: em7_restart_net is succeeded
    when:
      - reg_nic1_update is changed or reg_nic2_update is changed
  become: "{{ true if ansible_user != 'root' else false }}"
  when: inventory_hostname is search('em7')
  tags: vm_creation
